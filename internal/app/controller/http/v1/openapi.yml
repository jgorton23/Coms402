openapi: 3.0.0
info:
  description: "This is a repository to create, view, edit, and share product and materials certificates"
  version: 0.0.3
  title: Online Certificate Repository
  termsOfService: "temp"
  contact:
    email: "s23-cs-srp-gp12@iastate.edu"
#   license:
#     name: Apache 2.0
#     url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: company
    description: Company
  - name: user
    description: User
  - name: userRole
    description: userRoles
#     externalDocs:
#       description: Find out more
#       url: http://swagger.io
paths:
  /user:
    get:
      tags:
        - user
      summary: Find user by *
      description: Returns a single user
      operationId: getUserBy*
      parameters:
        - name: userEmail
          in: query
          description: email of user to return
          required: false
          schema:
            type: string
        - name: userUUID
          in: query
          description: uuid of user to return
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: '#/components/responses/DefaultErrorResponse'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'    
  /user/role:
    post:
      tags:
        - userRole
      summary: Create a new User Role
      description: "Creates a new user role"
      operationId: addUserRole
      requestBody:
        description: UserRole to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUserRole"
      responses:
        "201":
          description: User Role created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRole"
        "400":
          $ref: '#/components/responses/DefaultErrorResponse'
        "401":
          $ref: '#/components/responses/DefaultUnauthenticatedErrorResponse'
        "403":
          $ref: '#/components/responses/DefaultUnauthorizedErrorResponse'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /company:
    post:
      tags:
        - company
      summary: Create a new Company
      description: "Creates a new company"
      operationId: addCompany
      requestBody:
        description: Company to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewCompany"              
      responses:
        "201":
          description: Company created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "400":
          $ref: '#/components/responses/DefaultErrorResponse'
        "401":
          $ref: '#/components/responses/DefaultUnauthenticatedErrorResponse'
        "403":
          $ref: '#/components/responses/DefaultUnauthorizedErrorResponse'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    put:
      tags:
        - company
      summary: Update an existing company
      description: "Update an existing company"
      operationId: updateCompany
      requestBody:
        description: Company to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        "200":
          description: Successively updated company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "400":
          $ref: '#/components/responses/DefaultErrorResponse'
        "401":
          $ref: '#/components/responses/DefaultUnauthenticatedErrorResponse'
        "403":
          $ref: '#/components/responses/DefaultUnauthorizedErrorResponse'
        "404":
          $ref: '#/components/responses/DefaultErrorResponse'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'

  /company/{companyUUID}:
    get:
      tags:
        - company
      summary: Find company by UUID
      description: Returns a single company
      operationId: getCompanyByUUID
      parameters:
        - name: companyUUID
          in: path
          description: UUID of company to return
          required: true
          schema:
            type: string
            pattern: ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "400":
          $ref: '#/components/responses/DefaultErrorResponse'
        "401":
          $ref: '#/components/responses/DefaultUnauthenticatedErrorResponse'
        "403":
          $ref: '#/components/responses/DefaultUnauthorizedErrorResponse'
        "404":
          $ref: '#/components/responses/DefaultErrorResponse'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'

# externalDocs:
#   description: Find out more about Swagger
#   url: http://swagger.io
servers:
  - url: localhost:8082/api/v1
components:
  responses:
    DefaultErrorResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"      
      description: unexpected error
    DefaultUnauthenticatedErrorResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"      
      description: unauthenticated error
    DefaultUnauthorizedErrorResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"      
      description: unauthorized error
  schemas:
    User:
      type: object
      required:
        - "uuid"
        - "email"
        - "created"
      properties:
        uuid: 
          type: string
          description: uuid of the user
          pattern: ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
        email:
          type: string
          description: email of the user
        created:
          type: string
          description: time user was created at
    NewUserRole:
      type: object
      required:
        - companyUUID
        - roleType
      properties:
        companyUUID:
          type: string
        userUUID:
          type: string
        roleType:
          type: string
        approved:
          type: boolean
      additionalProperties: false
    UserRole:
      allOf:
        - $ref: '#/components/schemas/NewUserRole'
          required:
          - "userUUID"
          - "roleType"
          - "approved"
        - type: object
          required:
            - "uuid"
          properties:
            uuid: 
              type: string
          additionalProperties: false
      additionalProperties: false
    NewCompany:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the company
          maxLength: 10
          pattern: "[A-Za-z0-9_]"
      additionalProperties: false
    Company:
      allOf:
        - $ref: '#/components/schemas/NewCompany'
        - type: object
          required:
            - "uuid"
          properties:
            uuid: 
              type: string
              description: uuid of the company
              pattern: ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
          additionalProperties: false
      additionalProperties: false
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code 
        message:
          type: string
          description: Error message
          pattern: "[A-Za-z0-9_]"
          maxLength: 128
      additionalProperties: false
