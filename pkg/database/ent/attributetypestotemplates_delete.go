// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"

	"git.las.iastate.edu/SeniorDesignComS/2023spr/online-certificate-repo/backend/pkg/database/ent/attributetypestotemplates"
	"git.las.iastate.edu/SeniorDesignComS/2023spr/online-certificate-repo/backend/pkg/database/ent/predicate"
)

// AttributeTypesToTemplatesDelete is the builder for deleting a AttributeTypesToTemplates entity.
type AttributeTypesToTemplatesDelete struct {
	config
	hooks    []Hook
	mutation *AttributeTypesToTemplatesMutation
}

// Where appends a list predicates to the AttributeTypesToTemplatesDelete builder.
func (atttd *AttributeTypesToTemplatesDelete) Where(ps ...predicate.AttributeTypesToTemplates) *AttributeTypesToTemplatesDelete {
	atttd.mutation.Where(ps...)
	return atttd
}

// Exec executes the deletion query and returns how many vertices were deleted.
func (atttd *AttributeTypesToTemplatesDelete) Exec(ctx context.Context) (int, error) {
	return withHooks[int, AttributeTypesToTemplatesMutation](ctx, atttd.sqlExec, atttd.mutation, atttd.hooks)
}

// ExecX is like Exec, but panics if an error occurs.
func (atttd *AttributeTypesToTemplatesDelete) ExecX(ctx context.Context) int {
	n, err := atttd.Exec(ctx)
	if err != nil {
		panic(err)
	}
	return n
}

func (atttd *AttributeTypesToTemplatesDelete) sqlExec(ctx context.Context) (int, error) {
	_spec := sqlgraph.NewDeleteSpec(attributetypestotemplates.Table, sqlgraph.NewFieldSpec(attributetypestotemplates.FieldID, field.TypeUUID))
	if ps := atttd.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	affected, err := sqlgraph.DeleteNodes(ctx, atttd.driver, _spec)
	if err != nil && sqlgraph.IsConstraintError(err) {
		err = &ConstraintError{msg: err.Error(), wrap: err}
	}
	atttd.mutation.done = true
	return affected, err
}

// AttributeTypesToTemplatesDeleteOne is the builder for deleting a single AttributeTypesToTemplates entity.
type AttributeTypesToTemplatesDeleteOne struct {
	atttd *AttributeTypesToTemplatesDelete
}

// Where appends a list predicates to the AttributeTypesToTemplatesDelete builder.
func (atttdo *AttributeTypesToTemplatesDeleteOne) Where(ps ...predicate.AttributeTypesToTemplates) *AttributeTypesToTemplatesDeleteOne {
	atttdo.atttd.mutation.Where(ps...)
	return atttdo
}

// Exec executes the deletion query.
func (atttdo *AttributeTypesToTemplatesDeleteOne) Exec(ctx context.Context) error {
	n, err := atttdo.atttd.Exec(ctx)
	switch {
	case err != nil:
		return err
	case n == 0:
		return &NotFoundError{attributetypestotemplates.Label}
	default:
		return nil
	}
}

// ExecX is like Exec, but panics if an error occurs.
func (atttdo *AttributeTypesToTemplatesDeleteOne) ExecX(ctx context.Context) {
	if err := atttdo.Exec(ctx); err != nil {
		panic(err)
	}
}
