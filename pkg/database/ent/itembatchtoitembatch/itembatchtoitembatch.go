// Code generated by ent, DO NOT EDIT.

package itembatchtoitembatch

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the itembatchtoitembatch type in the database.
	Label = "item_batch_to_item_batch"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "UUID"
	// FieldChildUUID holds the string denoting the childuuid field in the database.
	FieldChildUUID = "child_uuid"
	// FieldParentUUID holds the string denoting the parentuuid field in the database.
	FieldParentUUID = "parent_uuid"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeChild holds the string denoting the child edge name in mutations.
	EdgeChild = "child"
	// Table holds the table name of the itembatchtoitembatch in the database.
	Table = "item_batch_to_item_batches"
	// ParentTable is the table that holds the parent relation/edge.
	ParentTable = "item_batch_to_item_batches"
	// ParentInverseTable is the table name for the ItemBatch entity.
	// It exists in this package in order to avoid circular dependency with the "itembatch" package.
	ParentInverseTable = "item_batches"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "parent_uuid"
	// ChildTable is the table that holds the child relation/edge.
	ChildTable = "item_batch_to_item_batches"
	// ChildInverseTable is the table name for the ItemBatch entity.
	// It exists in this package in order to avoid circular dependency with the "itembatch" package.
	ChildInverseTable = "item_batches"
	// ChildColumn is the table column denoting the child relation/edge.
	ChildColumn = "child_uuid"
)

// Columns holds all SQL columns for itembatchtoitembatch fields.
var Columns = []string{
	FieldID,
	FieldChildUUID,
	FieldParentUUID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
