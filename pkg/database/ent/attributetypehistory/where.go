// Code generated by ent, DO NOT EDIT.

package attributetypehistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"

	"git.las.iastate.edu/SeniorDesignComS/2023spr/online-certificate-repo/backend/pkg/database/ent/predicate"
	"git.las.iastate.edu/SeniorDesignComS/2023spr/online-certificate-repo/backend/pkg/database/enthistory"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldLTE(FieldID, id))
}

// HistoryTime applies equality check predicate on the "history_time" field. It's identical to HistoryTimeEQ.
func HistoryTime(v time.Time) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// Ref applies equality check predicate on the "ref" field. It's identical to RefEQ.
func Ref(v uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEQ(FieldRef, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// Key applies equality check predicate on the "key" field. It's identical to KeyEQ.
func Key(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEQ(FieldKey, v))
}

// CompanyUUID applies equality check predicate on the "companyUUID" field. It's identical to CompanyUUIDEQ.
func CompanyUUID(v uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEQ(FieldCompanyUUID, v))
}

// HistoryTimeEQ applies the EQ predicate on the "history_time" field.
func HistoryTimeEQ(v time.Time) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// HistoryTimeNEQ applies the NEQ predicate on the "history_time" field.
func HistoryTimeNEQ(v time.Time) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNEQ(FieldHistoryTime, v))
}

// HistoryTimeIn applies the In predicate on the "history_time" field.
func HistoryTimeIn(vs ...time.Time) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldIn(FieldHistoryTime, vs...))
}

// HistoryTimeNotIn applies the NotIn predicate on the "history_time" field.
func HistoryTimeNotIn(vs ...time.Time) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNotIn(FieldHistoryTime, vs...))
}

// HistoryTimeGT applies the GT predicate on the "history_time" field.
func HistoryTimeGT(v time.Time) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldGT(FieldHistoryTime, v))
}

// HistoryTimeGTE applies the GTE predicate on the "history_time" field.
func HistoryTimeGTE(v time.Time) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldGTE(FieldHistoryTime, v))
}

// HistoryTimeLT applies the LT predicate on the "history_time" field.
func HistoryTimeLT(v time.Time) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldLT(FieldHistoryTime, v))
}

// HistoryTimeLTE applies the LTE predicate on the "history_time" field.
func HistoryTimeLTE(v time.Time) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldLTE(FieldHistoryTime, v))
}

// RefEQ applies the EQ predicate on the "ref" field.
func RefEQ(v uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEQ(FieldRef, v))
}

// RefNEQ applies the NEQ predicate on the "ref" field.
func RefNEQ(v uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNEQ(FieldRef, v))
}

// RefIn applies the In predicate on the "ref" field.
func RefIn(vs ...uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldIn(FieldRef, vs...))
}

// RefNotIn applies the NotIn predicate on the "ref" field.
func RefNotIn(vs ...uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNotIn(FieldRef, vs...))
}

// RefGT applies the GT predicate on the "ref" field.
func RefGT(v uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldGT(FieldRef, v))
}

// RefGTE applies the GTE predicate on the "ref" field.
func RefGTE(v uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldGTE(FieldRef, v))
}

// RefLT applies the LT predicate on the "ref" field.
func RefLT(v uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldLT(FieldRef, v))
}

// RefLTE applies the LTE predicate on the "ref" field.
func RefLTE(v uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldLTE(FieldRef, v))
}

// RefIsNil applies the IsNil predicate on the "ref" field.
func RefIsNil() predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldIsNull(FieldRef))
}

// RefNotNil applies the NotNil predicate on the "ref" field.
func RefNotNil() predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNotNull(FieldRef))
}

// OperationEQ applies the EQ predicate on the "operation" field.
func OperationEQ(v enthistory.OpType) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEQ(FieldOperation, v))
}

// OperationNEQ applies the NEQ predicate on the "operation" field.
func OperationNEQ(v enthistory.OpType) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNEQ(FieldOperation, v))
}

// OperationIn applies the In predicate on the "operation" field.
func OperationIn(vs ...enthistory.OpType) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldIn(FieldOperation, vs...))
}

// OperationNotIn applies the NotIn predicate on the "operation" field.
func OperationNotIn(vs ...enthistory.OpType) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNotIn(FieldOperation, vs...))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// KeyEQ applies the EQ predicate on the "key" field.
func KeyEQ(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEQ(FieldKey, v))
}

// KeyNEQ applies the NEQ predicate on the "key" field.
func KeyNEQ(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNEQ(FieldKey, v))
}

// KeyIn applies the In predicate on the "key" field.
func KeyIn(vs ...string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldIn(FieldKey, vs...))
}

// KeyNotIn applies the NotIn predicate on the "key" field.
func KeyNotIn(vs ...string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNotIn(FieldKey, vs...))
}

// KeyGT applies the GT predicate on the "key" field.
func KeyGT(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldGT(FieldKey, v))
}

// KeyGTE applies the GTE predicate on the "key" field.
func KeyGTE(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldGTE(FieldKey, v))
}

// KeyLT applies the LT predicate on the "key" field.
func KeyLT(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldLT(FieldKey, v))
}

// KeyLTE applies the LTE predicate on the "key" field.
func KeyLTE(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldLTE(FieldKey, v))
}

// KeyContains applies the Contains predicate on the "key" field.
func KeyContains(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldContains(FieldKey, v))
}

// KeyHasPrefix applies the HasPrefix predicate on the "key" field.
func KeyHasPrefix(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldHasPrefix(FieldKey, v))
}

// KeyHasSuffix applies the HasSuffix predicate on the "key" field.
func KeyHasSuffix(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldHasSuffix(FieldKey, v))
}

// KeyEqualFold applies the EqualFold predicate on the "key" field.
func KeyEqualFold(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEqualFold(FieldKey, v))
}

// KeyContainsFold applies the ContainsFold predicate on the "key" field.
func KeyContainsFold(v string) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldContainsFold(FieldKey, v))
}

// CompanyUUIDEQ applies the EQ predicate on the "companyUUID" field.
func CompanyUUIDEQ(v uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldEQ(FieldCompanyUUID, v))
}

// CompanyUUIDNEQ applies the NEQ predicate on the "companyUUID" field.
func CompanyUUIDNEQ(v uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNEQ(FieldCompanyUUID, v))
}

// CompanyUUIDIn applies the In predicate on the "companyUUID" field.
func CompanyUUIDIn(vs ...uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldIn(FieldCompanyUUID, vs...))
}

// CompanyUUIDNotIn applies the NotIn predicate on the "companyUUID" field.
func CompanyUUIDNotIn(vs ...uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldNotIn(FieldCompanyUUID, vs...))
}

// CompanyUUIDGT applies the GT predicate on the "companyUUID" field.
func CompanyUUIDGT(v uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldGT(FieldCompanyUUID, v))
}

// CompanyUUIDGTE applies the GTE predicate on the "companyUUID" field.
func CompanyUUIDGTE(v uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldGTE(FieldCompanyUUID, v))
}

// CompanyUUIDLT applies the LT predicate on the "companyUUID" field.
func CompanyUUIDLT(v uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldLT(FieldCompanyUUID, v))
}

// CompanyUUIDLTE applies the LTE predicate on the "companyUUID" field.
func CompanyUUIDLTE(v uuid.UUID) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(sql.FieldLTE(FieldCompanyUUID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AttributeTypeHistory) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AttributeTypeHistory) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AttributeTypeHistory) predicate.AttributeTypeHistory {
	return predicate.AttributeTypeHistory(func(s *sql.Selector) {
		p(s.Not())
	})
}
