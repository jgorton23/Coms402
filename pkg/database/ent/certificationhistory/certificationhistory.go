// Code generated by ent, DO NOT EDIT.

package certificationhistory

import (
	"fmt"
	"time"

	"github.com/google/uuid"

	"git.las.iastate.edu/SeniorDesignComS/2023spr/online-certificate-repo/backend/pkg/database/enthistory"
)

const (
	// Label holds the string label denoting the certificationhistory type in the database.
	Label = "certification_history"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "UUID"
	// FieldHistoryTime holds the string denoting the history_time field in the database.
	FieldHistoryTime = "history_time"
	// FieldRef holds the string denoting the ref field in the database.
	FieldRef = "ref"
	// FieldOperation holds the string denoting the operation field in the database.
	FieldOperation = "operation"
	// FieldUpdatedBy holds the string denoting the updated_by field in the database.
	FieldUpdatedBy = "updated_by"
	// FieldPrimaryAttribute holds the string denoting the primaryattribute field in the database.
	FieldPrimaryAttribute = "primary_attribute"
	// FieldCompanyUUID holds the string denoting the companyuuid field in the database.
	FieldCompanyUUID = "company_uuid"
	// FieldItemBatchUUID holds the string denoting the itembatchuuid field in the database.
	FieldItemBatchUUID = "item_batch_uuid"
	// FieldImageUUID holds the string denoting the imageuuid field in the database.
	FieldImageUUID = "image_uuid"
	// Table holds the table name of the certificationhistory in the database.
	Table = "certification_history"
)

// Columns holds all SQL columns for certificationhistory fields.
var Columns = []string{
	FieldID,
	FieldHistoryTime,
	FieldRef,
	FieldOperation,
	FieldUpdatedBy,
	FieldPrimaryAttribute,
	FieldCompanyUUID,
	FieldItemBatchUUID,
	FieldImageUUID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultHistoryTime holds the default value on creation for the "history_time" field.
	DefaultHistoryTime func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OperationValidator is a validator for the "operation" field enum values. It is called by the builders before save.
func OperationValidator(o enthistory.OpType) error {
	switch o.String() {
	case "INSERT", "UPDATE", "DELETE":
		return nil
	default:
		return fmt.Errorf("certificationhistory: invalid enum value for operation field: %q", o)
	}
}
