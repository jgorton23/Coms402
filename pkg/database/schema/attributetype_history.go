// Code generated by enthistory, DO NOT EDIT.
package schema

import (
	"time"

	"entgo.io/ent"
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/schema"
	"entgo.io/ent/schema/field"
	"github.com/google/uuid"

	"git.las.iastate.edu/SeniorDesignComS/2023spr/online-certificate-repo/backend/pkg/database/enthistory"
)

// AttributeTypeHistory holds the schema definition for the AttributeTypeHistory entity.
type AttributeTypeHistory struct {
	ent.Schema
}

// Annotations of the AttributeTypeHistory.
func (AttributeTypeHistory) Annotations() []schema.Annotation {
	return []schema.Annotation{
		entsql.Annotation{
			Table: "attribute_type_history",
		},
		enthistory.Annotations{
			IsHistory: true,
			Exclude:   true,
		},
	}
}

// Fields of the AttributeTypeHistory.
func (AttributeTypeHistory) Fields() []ent.Field {
	historyFields := []ent.Field{
		field.Time("history_time").
			Default(time.Now).
			Immutable(),
		field.UUID("ref", uuid.UUID{}).
			Immutable().
			Optional(),
		field.Enum("operation").
			GoType(enthistory.OpType("")).
			Immutable(),
		field.String("updated_by").
			Optional().
			Immutable().
			Nillable(),
	}

	return append(historyFields, AttributeType{}.Fields()...)
}

// Mixin of the AttributeTypeHistory.
func (AttributeTypeHistory) Mixin() []ent.Mixin {
	return AttributeType{}.Mixin()
}
